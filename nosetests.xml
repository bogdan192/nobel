<?xml version="1.0" encoding="UTF-8"?><testsuite name="nosetests" tests="8" errors="0" failures="7" skip="1"><testcase classname="tests.NobelRestTest" name="test_bruteforce_users" time="0.000"><skipped type="unittest.case.SkipTest" message="Dont wannt to bruteforce this run"><![CDATA[SkipTest: Dont wannt to bruteforce this run
]]></skipped></testcase><testcase classname="tests.NobelRestTest" name="test_empty_login" time="0.274"><failure type="exceptions.AssertionError" message='Should not get 200 RC for empty client login&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): beta-portal.nobelfinancial.com&#10;requests.packages.urllib3.connectionpool: DEBUG: "POST /nfp-ws/login HTTP/1.1" 200 None&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------'><![CDATA[  File "/usr/lib/python2.7/unittest/case.py", line 331, in run
    testMethod()
  File "/home/bplesa/PycharmProjects/nobel-test/tests.py", line 76, in test_empty_login
    self.assertNotEqual(r.status_code, 200, 'Should not get 200 RC for empty client login')
  File "/usr/lib/python2.7/unittest/case.py", line 524, in assertNotEqual
    raise self.failureException(msg)
'Should not get 200 RC for empty client login\n-------------------- >> begin captured logging << --------------------\nrequests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): beta-portal.nobelfinancial.com\nrequests.packages.urllib3.connectionpool: DEBUG: "POST /nfp-ws/login HTTP/1.1" 200 None\n--------------------- >> end captured logging << ---------------------']]></failure></testcase><testcase classname="tests.NobelRestTest" name="test_empty_user" time="0.267"><failure type="exceptions.AssertionError" message='Should not get 200 RC for empty client username&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): beta-portal.nobelfinancial.com&#10;requests.packages.urllib3.connectionpool: DEBUG: "POST /nfp-ws/login HTTP/1.1" 200 None&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------'><![CDATA[  File "/usr/lib/python2.7/unittest/case.py", line 331, in run
    testMethod()
  File "/home/bplesa/PycharmProjects/nobel-test/tests.py", line 85, in test_empty_user
    self.assertNotEqual(r.status_code, 200, 'Should not get 200 RC for empty client username')
  File "/usr/lib/python2.7/unittest/case.py", line 524, in assertNotEqual
    raise self.failureException(msg)
'Should not get 200 RC for empty client username\n-------------------- >> begin captured logging << --------------------\nrequests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): beta-portal.nobelfinancial.com\nrequests.packages.urllib3.connectionpool: DEBUG: "POST /nfp-ws/login HTTP/1.1" 200 None\n--------------------- >> end captured logging << ---------------------']]></failure></testcase><testcase classname="tests.NobelRestTest" name="test_extended_latin_username" time="0.257"><failure type="exceptions.AssertionError" message='Should not get 200 RC for empty client username&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): beta-portal.nobelfinancial.com&#10;requests.packages.urllib3.connectionpool: DEBUG: "POST /nfp-ws/login HTTP/1.1" 200 None&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------'><![CDATA[  File "/usr/lib/python2.7/unittest/case.py", line 331, in run
    testMethod()
  File "/home/bplesa/PycharmProjects/nobel-test/tests.py", line 92, in test_extended_latin_username
    self.assertNotEqual(r.status_code, 200, 'Should not get 200 RC for empty client username')
  File "/usr/lib/python2.7/unittest/case.py", line 524, in assertNotEqual
    raise self.failureException(msg)
'Should not get 200 RC for empty client username\n-------------------- >> begin captured logging << --------------------\nrequests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): beta-portal.nobelfinancial.com\nrequests.packages.urllib3.connectionpool: DEBUG: "POST /nfp-ws/login HTTP/1.1" 200 None\n--------------------- >> end captured logging << ---------------------']]></failure></testcase><testcase classname="tests.NobelRestTest" name="test_login_bad_pw" time="0.262"><failure type="exceptions.AssertionError" message='200 != 403&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): beta-portal.nobelfinancial.com&#10;requests.packages.urllib3.connectionpool: DEBUG: "POST /nfp-ws/login HTTP/1.1" 200 None&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------'><![CDATA[  File "/usr/lib/python2.7/unittest/case.py", line 331, in run
    testMethod()
  File "/home/bplesa/PycharmProjects/nobel-test/tests.py", line 61, in test_login_bad_pw
    self.assertEqual(r.status_code, 403)
  File "/usr/lib/python2.7/unittest/case.py", line 515, in assertEqual
    assertion_func(first, second, msg=msg)
  File "/usr/lib/python2.7/unittest/case.py", line 508, in _baseAssertEqual
    raise self.failureException(msg)
'200 != 403\n-------------------- >> begin captured logging << --------------------\nrequests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): beta-portal.nobelfinancial.com\nrequests.packages.urllib3.connectionpool: DEBUG: "POST /nfp-ws/login HTTP/1.1" 200 None\n--------------------- >> end captured logging << ---------------------']]></failure></testcase><testcase classname="tests.NobelRestTest" name="test_login_with_bad_username" time="0.276"><failure type="exceptions.AssertionError" message='200 != 403&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): beta-portal.nobelfinancial.com&#10;requests.packages.urllib3.connectionpool: DEBUG: "POST /nfp-ws/login HTTP/1.1" 200 None&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------'><![CDATA[  File "/usr/lib/python2.7/unittest/case.py", line 331, in run
    testMethod()
  File "/home/bplesa/PycharmProjects/nobel-test/tests.py", line 52, in test_login_with_bad_username
    self.assertEqual(r.status_code, 403)
  File "/usr/lib/python2.7/unittest/case.py", line 515, in assertEqual
    assertion_func(first, second, msg=msg)
  File "/usr/lib/python2.7/unittest/case.py", line 508, in _baseAssertEqual
    raise self.failureException(msg)
'200 != 403\n-------------------- >> begin captured logging << --------------------\nrequests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): beta-portal.nobelfinancial.com\nrequests.packages.urllib3.connectionpool: DEBUG: "POST /nfp-ws/login HTTP/1.1" 200 None\n--------------------- >> end captured logging << ---------------------']]></failure></testcase><testcase classname="tests.NobelRestTest" name="test_login_with_provided" time="0.268"><failure type="exceptions.AssertionError" message='False is not true&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): beta-portal.nobelfinancial.com&#10;requests.packages.urllib3.connectionpool: DEBUG: "POST /nfp-ws/login HTTP/1.1" 200 None&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------'><![CDATA[  File "/usr/lib/python2.7/unittest/case.py", line 331, in run
    testMethod()
  File "/home/bplesa/PycharmProjects/nobel-test/tests.py", line 41, in test_login_with_provided
    self.assertTrue(self.check_success_json(r.json()))
  File "/usr/lib/python2.7/unittest/case.py", line 424, in assertTrue
    raise self.failureException(msg)
'False is not true\n-------------------- >> begin captured logging << --------------------\nrequests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): beta-portal.nobelfinancial.com\nrequests.packages.urllib3.connectionpool: DEBUG: "POST /nfp-ws/login HTTP/1.1" 200 None\n--------------------- >> end captured logging << ---------------------']]></failure></testcase><testcase classname="tests.NobelRestTest" name="test_not_json" time="0.332"><failure type="exceptions.AssertionError" message="&#10;-------------------- &gt;&gt; begin captured stdout &lt;&lt; ---------------------&#10;{u'success': False, u'idResult': 0, u'exceptionType': u'EXCEPTION_UNEXPECTED', u'failed': True, u'message': u'Could not read JSON: Can not instantiate value of type [simple type, class com.nobelfinancial.controller.security.LoginData] from Boolean value (true); no single-boolean/Boolean-arg constructor/factory method\n at [Source: java.io.PushbackInputStream@621e303d; line: 1, column: 1]; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Can not instantiate value of type [simple type, class com.nobelfinancial.controller.security.LoginData] from Boolean value (true); no single-boolean/Boolean-arg constructor/factory method\n at [Source: java.io.PushbackInputStream@621e303d; line: 1, column: 1]', u'type': u'ACTION_FAILED'}&#10;500&#10;&#10;--------------------- &gt;&gt; end captured stdout &lt;&lt; ----------------------&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): beta-portal.nobelfinancial.com&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;POST /nfp-ws/login HTTP/1.1&quot; 500 None&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/lib/python2.7/unittest/case.py", line 331, in run
    testMethod()
  File "/home/bplesa/PycharmProjects/nobel-test/tests.py", line 103, in test_not_json
    assert False
'\n-------------------- >> begin captured stdout << ---------------------\n{u\'success\': False, u\'idResult\': 0, u\'exceptionType\': u\'EXCEPTION_UNEXPECTED\', u\'failed\': True, u\'message\': u\'Could not read JSON: Can not instantiate value of type [simple type, class com.nobelfinancial.controller.security.LoginData] from Boolean value (true); no single-boolean/Boolean-arg constructor/factory method\\n at [Source: java.io.PushbackInputStream@621e303d; line: 1, column: 1]; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Can not instantiate value of type [simple type, class com.nobelfinancial.controller.security.LoginData] from Boolean value (true); no single-boolean/Boolean-arg constructor/factory method\\n at [Source: java.io.PushbackInputStream@621e303d; line: 1, column: 1]\', u\'type\': u\'ACTION_FAILED\'}\n500\n\n--------------------- >> end captured stdout << ----------------------\n-------------------- >> begin captured logging << --------------------\nrequests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): beta-portal.nobelfinancial.com\nrequests.packages.urllib3.connectionpool: DEBUG: "POST /nfp-ws/login HTTP/1.1" 500 None\n--------------------- >> end captured logging << ---------------------']]></failure><system-out><![CDATA[{u'success': False, u'idResult': 0, u'exceptionType': u'EXCEPTION_UNEXPECTED', u'failed': True, u'message': u'Could not read JSON: Can not instantiate value of type [simple type, class com.nobelfinancial.controller.security.LoginData] from Boolean value (true); no single-boolean/Boolean-arg constructor/factory method\n at [Source: java.io.PushbackInputStream@621e303d; line: 1, column: 1]; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Can not instantiate value of type [simple type, class com.nobelfinancial.controller.security.LoginData] from Boolean value (true); no single-boolean/Boolean-arg constructor/factory method\n at [Source: java.io.PushbackInputStream@621e303d; line: 1, column: 1]', u'type': u'ACTION_FAILED'}
500
]]></system-out></testcase></testsuite>